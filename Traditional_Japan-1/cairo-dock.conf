#2.1.4-0beta0
######## This is the conf file of Cairo-Dock, released under the GPL.##########
######## It is parsed by cairo-dock to automatically generate an appropriate GUI,##########
######## so don't mess into it, except if you know what you're doing ! ;-)##########

[Position]

#F-[Position on the screen;gtk-fullscreen]
frame_pos=

#l-[bottom;top;right;left] Choose which border of the screen the dock will be placed on:
#{Icons will scroll according to what positioning model is selected. The dock can of course can be positioned anywhere on the screen. Here we specify this relative position.}
screen border=0

#e-[0.;1.;left;right] Relative alignment:
#{When set to 0 the dock will position itself relative to the left corner if horizontal and the top corner if vertical. When set to 1 it will position itself relative to the right corner if horizontal and the bottom corner if vertical. When set to 0.5, it will position itself relative to the middle of the screen's edge.}
alignment=0.5

#F-[Offset from the screen's edge;gtk-leave-fullscreen]
frame_scr=

#I-[-1000;1000] Lateral offset:
#{Gap from the absolute position on the screen's edge, in pixels. You can also move the dock by holding the ALT or CTRL key and the left mouse button.}
x gap=0
#i-[-30;1000] Distance to the screen edge:
#{in pixels. You can also move the dock by holding the ALT or CTRL key and the left mouse button.}
y gap=0

#F-[Multiple screens]
frame_xin=

#B- Use Xinerama?
xinerama=false
#i[0;12] Number of the screen where the dock should be located :
#{starting from 0}
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
num screen=0


[Accessibility]

#F-[Visibility of the main dock;gtk-find]
frame_visi=

#Y-[Always on top;0;0;Prevent windows from overlapping the dock;0;0;Keep the dock below windows;1;1;Automatically hide the dock;0;0;Automatically hide when a window is maximized;0;0;Pop-up on shortcut;2;1] Visibility:
#{Prevent windows from overlapping the dock: reserve space at the edge of the screen for the dock.
#Auto-hide: the dock will automatically hide itself outside of the screen when the mouse leaves it. Instead, it will show a zone where placing the mouse will trigger the dock and make it re-appear.
#Keep the dock below windows: the dock will pop-up on the foreground when you place the mouse on its screen border.
#Pop-up on shortcut : When you press the shortcut, the dock will pop-up at the position of your mouse. The rest of the time, it stays invisible, thus acting like a menu.}
visibility=4

#b- Pop-up only if the mouse hits a screen corner
pop in corner only=false

#i-[0;1000] Delay before the dock unhide itself?
#{in ms. 0 means no delay.}
unhide delay=0


#k- Keyboard shortcut to pop-up the dock:
#{When you press the shortcut, the dock will show itself at the potition of your mouse. The rest of the time, it stays invisible, thus acting like a menu.}
raise shortcut=

#F-[Additional parameters]
frame_extra=

max_authorized_width=0

#b- Stretch the dock to always fill the screen
extended=true

#j-[1;1600] Size of the callback zone (width x height, in pixels):
#{Placing the mouse into it will make the dock re-appear.}
zone size=1200;2;

#b- Automatically hide the dock when a window becomes full screen?
#{This is only usefull if you do not already use auto-hide and if your Window Manager allows the dock in front of fullscreen windows (which is rare).}
auto quick hide=false


#F-[Sub-docks' visibility;/usr//cairo-dock/icon-subdock.png]
frame_sub=

#b- Click to show sub-docks
#{Otherwise they will appear when you hover over the icon pointing to it.}
show on click=true

#i- Delay before leaving or entering a sub-dock takes effect:
#{in ms.}
leaving delay=250

#i- Delay before displaying a sub-dock:
#{in ms. Unused if you activate the click to show sub-docks.}
show delay=300

lock icons=false
lock all=false


[TaskBar]

#F-[Behaviour;gtk-properties]
frame1=

#b- Show currently opened applications in the dock?
#{Cairo-Dock will then replace your taskbar. It is recommended to remove any other taskbars and to not force the dock type to normal.}
show applications=true

#b- Only show icons whose windows are minimised
hide visible=false

#b- Only show applications on current desktop
current desktop only=false

#b- Mix launchers and applications
#{Allows launchers to act as applications when their programs are running and displays a marker on icons to indicate this. You can launch other occurences of the program with SHIFT+click.}
mix launcher appli=true

#B- Group windows from the same application in a sub-dock ?
#{This allows you to group all the windows of a given application into a unique sub-dock, and to act on all of the windows at the same time.}
group by class=true

#s- 		Except the following classes:
#{Enter the class of the applications, separated by a semi-colon ';'}
group exception=


#F-[Representation;gtk-find]
frame3=

#B- Overwrite the X icon with the launchers' icon
#{If not set, the icon provided by X for each application will be used. If set, the same icon as the corresponding launcher will be used for each application.}
overwrite xicon=true

#s- 		Except the following classes:
#{Enter the class of the applications, separated by a semi-colon ';'}
overwrite exception=pidgin

#Y-[Make the config panel transparent?;1;1;Show thumbnails for minimsed windows;0;0;Draw it bent backwards;0;0] How to draw minimized windows ?
#{A composite manager is required to display the thumbnail.
#OpenGL is required to draw the icon bent backwards.}
minimized=1

#e-[0;.6;opaque;transparent] Transparency of icons whose window is or isn't minimised:
visibility alpha=0.40300000000000002

#b- Display an indicator even when the icon is not a launcher ?
#{The indicator is drawn on active launchers, but you may want to display it on applications too.}
indic on appli=true

#a- Play a short animation of the icon when its window becomes active
animation on active window=bounce

#i- Maximum number of caracters in application name:
#{"..." will be added at the end if the name is too long.}
max name length=15

#F-[Interaction;gtk-refresh]
frame2=

#b- Minimise the window when its icon is clicked, if it was already the active window ?
#{This is the default behaviour of most taskbars.}
minimize on click=true

#b- Middle-clicking on an icon closes the related application
#{In the style of Firefox tabs}
close on middle click=true

#v- 
sep_att=

#B-[2] Highlight applications requiring your attention with a dialog bubble
demands attention with dialog=true

#i-[1;20] Duration of the dialog:
#{in seconds}
duration=2

#s- Force the following applications to demand your attention
#{It will notify you even if, for instance, you are watching a movie in full screen or you are on another desktop.
#}
force demands attention=pidgin;xchat

#a- Highlight applications demanding your attention with an animation
animation on demands attention=rotate


[System]

#F-[Animations speed;/usr//cairo-dock/icon-movment.png]
frame_mov=

#b- Animate the dock when auto-hiding
#{The dock will unfold when it hides/shows itself. No effect if auto-hide is not enabled or unfold acceleration is null.}
animate on auto-hide=false

#b- Animate sub-docks when they appear
animate subdocks=true

#I-[100;600;fast;slow] Animation unfolding duration:
#{Icons will appear folded on themselves and will then unfold until they fill the whole dock. The smaller this value, the faster this will be.}
unfold duration=400

#v
sep_unfold=

#I-[4;40;fast;slow] Number of steps in the zoom animation (grow/shrink):
#{The more there are, the slower it will be}
grow nb steps=10
#I-[4;40;fast;slow] ...
shrink nb steps=8

#I-[4;40;fast;slow] Number of steps in the fade out animation:
#{This is the animation when the dock goes below a window. The higher the value, the slower it will be}
fade out nb steps=15

#I-[4;40;fast;slow] Number of steps in the auto-hide animation (move up/move down):
#{The more there are, the slower it will be}
move up nb steps=10
#I-[4;40;fast;slow] ...
move down nb steps=12

#F-[Refresh rate;gtk-execute]
frame_cpu=

#i-[5;40] Refresh rate when mouving cursor into the dock :
#{in Hz. This is to adjust behaviour relative to your CPU power.}
refresh frequency=35

#i-[15;60] Animation frequency for the OpenGL backend :
#{in Hz. This is to adjust behaviour relative to your CPU power.}
opengl anim freq=33

#i-[15;50] Animation frequency for the Cairo backend :
#{in Hz. This is to adjust behaviour relative to your CPU power.}
cairo anim freq=25

#b- Reflections should be calculated in real-time?
#{The transparency gradation pattern will then be re-calculated in real time. May need more CPU power.}
dynamic reflection=false

#F-[Label readability;gtk-underline]
frame_label=

#b- Should the labels always be horizontal, even when dock is vertical?
always horizontal=true

#f-[0.;50.] label's visibility threshold :
#{the bigger, the more the labels next to the selected icon will be transparent.}
alpha threshold=16.25

#m[Captions] Configure labels appearence.
config_labels=

#F-[Files;gtk-file]
frame_file=

#b- Show hidden files?
show hidden files=false

#F-[Composition;gtk-clear]
frame_fake=
#b- Emulate composition with fake transparency?
#{Only use this if you don't run a composite manager like Compiz, xcompmgr, etc and have a black background around your dock. For aesthetic reasons, the dock will be kept under other windows.}
fake transparency=false

#b- Make the config panel transparent?
#{You need to re-open the panel. It is deactivated by default on KDE.}
config transparency=true

#X-[Connection to the themes' server;/usr//cairo-dock/icon-connection.svg]
frame_conn=
#i-[1;20] Connection timeout to the themes' server :
#{Maximum time in seconds that you allow the connection to the server to take. This only limits the connection phase,  once the dock has connected this option is of no more use.}
conn timeout=5

#i-[10;300] Maximum time to download a theme:
#{Maximum time in seconds that you allow the whole operation to last. Some themes can be up to a few MB.}
conn max time=120

#i-[0;5] Number of retries:
#{If an error occurs during downloading a theme, it will retry this number of times before giving up.}
conn retry=0


modules=switcher;showDesktop;System Monitor;dnd2share;Quick Browser;AlsaMixer;shortcuts;illusion;logout;clock;musicPlayer;Animated icons;dustbin;Dbus;GMenu;icon effects


[Background]

#y+[Image;Colour gradation] Fill the background with:
fill bg=0

#F+[Image;gtk-orientation-portrait]
#{Use a background image.}
frame2=

#S+ Image filename to use as a background :
#{Any format allowed; if empty, the colour gradation will be used as a fall back.}
background image=icons/backround-darkwood.png

#e+[0;1;transparent;opaque] Image's transparency :
image alpha=1

#b+ Repeat image as a pattern to fill background?
repeat image=false

#F+[Colour gradation;/usr//cairo-dock/icon-gradation.png]
#{Use a colour gradation.}
frame3=

#C+ Bright colour:
stripes color bright=0.68468757152666515;0.8169985503929198;0.73479819943541624;0.44998855573357749;

#C+ Dark colour:
stripes color dark=0.74869916838330663;0.86752117189288169;0.90319676508735791;0.7686274509803922;

#f+[-90;90] Angle of the gradation :
#{In degrees, in relation to the vertical}
stripes angle=90

#i+ Repeat the gradation this number of times:
#{If not nul, it will form stripes.}
number of stripes=0

#f+[0;1] Percentage of the bright colour:
stripes width=1

#F+[External Frame;/usr//cairo-dock/icon-frame.png]
frame_frame=
#i+[0;30] Corner radius :
#{in pixels.}
corner radius=6

#i+[0;20] Linewidth of the external line :
#{in pixels.}
line width=0

#C+ Colour of the external line:
line color=1;1;1;0.54999618524452587;

#i+[0;20] Margin between the frame and the icons or their reflects :
#{in pixels.}
frame margin=7

#b+ Are the bottom left and right corners rounded?
rounded bottom corner=true

#F+
frame_frame_=

#F[Hidden dock;/usr//cairo-dock/icon-hidden-dock.svg]
#{Configure the dock's appearence when hidden.}
hidden_dock=

#S+ Filename of an image to put on :
#{This is what you see when the dock hides itselfs. Any format is allowed. Leave this field empty to have an invisible zone.}
callback image=

#e+[0;1;transparent;opaque] Transparency of the image :
callback alpha=1

#b+ Rotate the image when the dock is on top/left/right?
#{Use it when the image is an arrow pointing to the center of the screen for exemple.}
callback reverse=false

#m[Accessibility] Configure the auto-hide behaviour.
config_hidden=

#X+[Background movement;/usr//cairo-dock/icon-mouse.svg]
frame_mouse=

#Y+[No;0;0;Follow the mouse;1;1;Link with the mouse;1;1] Move the background image along with the cursor?
move bg=0

#e+[0.1;1;slow;fast] Speed :
#{The lower the value, the less the decorations will move along with the cursor.}
decorations speed=0.5


[Views]

#F+[Main Dock]
frame_main=

#n+ Choose the default view for main docks :/
main dock view=3D plane

#F+[Sub-Docks]
frame_sub=

#n+ Choose the default view for sub-docks :
#{You can overwrite this parameter for each sub-dock.}/
sub-dock view=Slide

same_horizontality=true

#e+[0.1;1.;smaller;same size] Ratio for the size of the sub-docks' icons :
#{You can specify a ratio for the size of the sub-docks' icons, in relation to the main docks' icons size}
relative icon size=0.80000000000000004


[Dialogs]

#F+[Bubble;/usr//cairo-dock/icon-bubble.png]
frame_bubble=

#C+ Background colour of the bubble:
background color=0.40645456626230259;0.20099183642328527;0.047913328755626768;0.61176470588235299;

#v
sep_bul=

#t+ Shape of the bubble:
decorator=comics

#F+[Text;gtk-select-font]
frame_text=

#B+ Use a custom font for the text?
#{Otherwise the default's system one will be used.}
custom=true

#P+ Text font:
message police=Sans Medium 14

#b+ Draw the outline of the text?
outlined=true

#c+ Text color:
text color=1;1;1;

#F+[Buttons;/usr//cairo-dock/icon-buttons.png]
frame_button=

#j+[10;64] Size of buttons in the info-bubbles (width x height) :
#{in pixels.}
button size=54;54;

#S+ Name of an image to use for the yes/ok button :
#{If you don't provide any, a default image will be used.}
button_ok image=icons/japanese-ok.png

#S+ Name of an image to use for the no/cancel button :
#{If you don't provide any, a default image will be used.}
button_cancel image=icons/japanese-cancel.png

#F+
fin_button=

#i+[16;96] Size of the icon displayed next to the text :
icon size=20


[Desklets]

#F+[Decorations;gtk-paste]
frame_deco=

#O+ Choose a default decoration for all desklets :
#{This can be customized for each desklet separately.
#Choose 'Custom decoration' to define your own decorations below}
decorations=personnal

#v
sep_deco=

#S+ Background image :
#{It's an image that will be displayed below the drawings, like a frame for example. Leave empty to not use any.}
bg desklet=icons/byoubu.png
#e+[0;1;transparent;opaque] Background transparency :
bg alpha=1
#i+[0;256] Left offset :
#{in pixels. Use this to adjust the left position of the drawings.}
left offset=35
#i+[0;256] Top offset :
#{in pixels. Use this to adjust the top position of the drawings.}
top offset=35
#i+[0;256] Right offset :
#{in pixels. Use this to adjust the right position of the drawings.}
right offset=35
#i+[0;256] Bottom offset :
#{in pixels. Use this to adjust the bottom position of the drawings.}
bottom offset=35
#S+ Foreground image :
#{It's an image that will be displayed above the drawings, like a reflection for example. Leave empty to not use any.}
fg desklet=icons/byoubu.png
#e+[0;1;transparent;opaque] Foreground tansparency :
fg alpha=0.19500000000000001

#F+[Buttons;gtk-close]
frame_button=

#i+[4;28] Buttons size :
button size=16

#S+ Name of an image to use for the 'rotate' button :
#{If you don't provide any, a default image will be used.}
rotate image=

#S+ Name of an image to use for the 'reattach' button :
#{If you don't provide any, a default image will be used.}
retach image=

#S+ Name of an image to use for the 'depth rotate' button :
#{If you don't provide any, a default image will be used.}
depth rotate image=

#S+ Name of an image to use for the 'rotate' button :
#{If you don't provide any, a default image will be used.}
no input image=


[Icons]

#F+[Icons' themes;gtk-select-color]
frame_theme=

#w+ Choose an icon theme :
#{Leave empty to use the current icon theme of your system. You can enter the name of a theme that is installed on your system (like 'Gartoon' or 'Human'), or even a path to a folder containing icons.}
default icon directory=_Custom Icons_

#S+ Image filename to use as a background for icons :
#{Any format allowed; leave this field empty if you don't want to use an image as background.}
icons bg=

#F+[Zoom effect;/usr//cairo-dock/icon-wave.png]
frame_shape=
#f+[1;5] Maximum zoom of the icons :
#{set to 1 if you don't want the icons to zoom when you hover over them.}
zoom max=2

#i+[1;999] Width of the space in which the zoom will be effective :
#{in pixels. Outside of this space (centered on the mouse), there is no zoom.}
sinusoid width=220

#i+[0;50] Space between icons :
#{in pixels.}
icon gap=3

#F+[Reflections]
frame_refl=

#e+[0;1;light;strong] Reflective power of the plane :
#{It is its albedo (reflectivity); at 1 the icons reflect to the maximum, at 0 reflections are not used.}
albedo=0.63400000000000001

#e+[0;1;small;tall] Height of the reflection:
#{In percent of the icon's size. This parameter influence the total height of the dock.}
field depth=0.33300000000000002

#e+[0;1;transparent;opaque] Icons' transparency at rest :
#{It is their transparency when the dock is at rest; they will "materialize" progressively as the dock grows up. The closer to 0, the more transparent they will be.}
alpha at rest=1

#X+[Icons size]
frame_size=

#j+[10;128] Launcher's size at rest (width x height) :
launcher size=48;48;

#j+[10;128] Application's size at rest (width x height) :
appli size=48;48;

#j+[10;128] Applet's size at rest (width x height) :
applet size=48;48;

#m[Animated icons] Configure icons' animations.
config_anim=

#M[icon effects] Configure icons' special effects (requires OpenGL).
config_effect=

#M[illusion] Configure icons' animations on appearing/disappearing (require OpenGL capacity).
config_illusion=

#X+[Separators]
frame_sep=

#j+[4;64] Icon size at rest (width x height) :
separator size=36;36;

#Y+[Use a background image.;1;4;Add a separator;4;1;Add a separator;0;0] How can I add a separator?
#{Only the default, 3D-plane and curve views support flat and physical separators. Flat separators are rendered differently according to the view.}
separator type=0

#S+ Filename of an image to use for separators :
#{If you don't provide one, blanks will be used.}
separator image=icons/separator.png

#b+ Make the separator's image revolve when dock is on top/on the left/on the right?
revolve separator image=false

#b+ Force separator's image size to stay constant?
force size=false

#C+ Colour of flat separators :
separator color=0.89999237048905167;0.89999237048905167;0.89999237048905167;1;


#X+[Icons order]
frame_order=

#Y+[No;0;0;Separate applications from others;1;1;Separate applets from others;1;1;Separate all;1;1] Separate the different types of icons?
#{If you separate a type of icons, the icons of this type will be placed together, separated from the others by a separator.
#If you don't separate the icons, you can place them wherever you want, and insert separators manually. Applications will then be placed next to their launcher if they have one, or after the last launcher.}
separate_icons=1

#T+[launchers;applications;applets] Order of the different types of icons :
icon's type order=1;0;2;


#X+[Link the icons with a string]
frame_string=

#i+[0;20] Linewidth of the string, in pixels (0 to not use string) :
string width=0

#C+ Colour of the string (red, blue, green, alpha) :
string color=0;0;0.59954222934309909;0.40000000000000002;


[Indicators]

#F+[Indicator of the active window]
frame_window=

#Y+[Image;1;1;Frame;2;3] Type of indicator:
active indic type=1

#S+ Image file:
active indicator=icons/lotus.png

#C+ Colour of the frame :
#{Set transparency to 0 if you don't want to use an indicator.}
active color=0.99696345464255742;0.74850080109864958;0.47701228351262687;0.70588235294117652;

#i+[0;20] Linewidth of the frame around the active window :
#{Set 0 to fill the frame.}
active line width=3

#i+[0;30] Corner radius of the frame around the active window :
active corner radius=17

#v
sep_ind=

#b+ Draw indicator above the icon?
active frame position=false


#F+[Indicator of active launcher]
frame_launch=

#S+ Image file:
#{Indicators are drawn on launchers icons to show that they have already been launched. Leave blank to use the default one.}
indicator image=

#b+ Draw indicator above the icon?
indicator above=true

#e+[0.1;1.5;smaller;bigger] Indicator size ratio :
#{You can choose to make the indicator smaller or bigger than the icons. The bigger the value is, the bigger the indicator is. 1 means the indicator will have the same size as the icons.}
indicator ratio=1

#i+[-10;64] Vertical offset :
#{in pixels. You can use this parameter to adjust the indicator's vertical position.}
indicator deltaY=2

#b+ Link the indicator with its icon?
#{It will then be resized like the icon, move like the icon, etc. Otherwise it will be drawn directly on the dock.}
link indicator=true

#b+ Rotate the indicator with dock?
#{Use it to make the indicator rotate according to the position of the dock (top/bottom/right/left)}
rotate indicator=true


#F+[Indicator of grouped windows]
frame_class=

#Y[Type of indicator:;1;2;Draw the sub-dock's icons as a stack;0;0] How to show that several icons are grouped :
use class indic=1

#S+ Image file:
#{It only makes sense if you chose to group the applis of the same class together. Leave blank to use the default one.}
class indicator=

#b+ Zoom the indicator with its icon?
zoom class=false


[Labels]

#l+[No;On pointed icon;On all icons] Show labels:
show_labels=1

#F+[Font;gtk-select-font]
frame_font=

#B+ Use a custom font for labels?
#{Otherwise the default's system one will be used.}
custom=true

#P+ Font used for labels :
police=DejaVu Sans Mono 12

#b+ Draw the outline of the text?
text oulined=true

#F+[Colour;gtk-select-color]
frame_col=

#c+ Start color :
#{It's the first color of the gradation.}
text color start=1;1;1;

#c+ Stop color :
#{It's the second color of the gradation. Set it to the same value as the first if you don't want to have any gradation.}
text color stop=1;1;1;

#b+ Pattern should be vertical?
#{If checked, the pattern will go from top to bottom, otherwise from left to right.}
vertical label pattern=true

#F+[Background;gtk-orientation-portrait]
frame_bg=

#C+ Colour of the label's background :
#{If you set it to fully transparent, there will be no background for the text, but the margin around the text will still be in effect.}
text background color=0;0;0;0.47057297627222094;

#b+ Use background color for labels?
#{If false, only the quick-info will have this background color.}
background for label=true

#i+[0;20] Margin around the text (in pixels) :
text margin=4
